#+TITLE: Yagra
#+AUTHOR: Hua Liang[Stupid ET]

* 环境搭建
  因为要求Apache，我们就选用Apache，而且Apache对于CGI的支持也是不错的。

** rewrite
  对于Apache，我们首先需要打开它的rewrite模块。因为需要Apache将所有的请求全部rewrite到指定处理器后面。详情见下面的配置。

  #+BEGIN_SRC sh
    a2enmode rewrite
    service apache2 restart
  #+END_SRC

** 虚拟主机配置
*** Apache配置
   #+BEGIN_EXAMPLE
     <VirtualHost *:81>
         ServerName yagra.everet.org
         ServerAdmin et@everet.org

         DocumentRoot /var/www/yagra/
         ErrorLog /var/log/apache2/yagra_errors.log
         CustomLog /var/log/apache2/yagra_accesses.log common

         AddHandler cgi-script .py
         DirectoryIndex main.py

         <Directory /var/www/yagra>
             AllowOverride None
             Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
             Order allow,deny
             Allow from all
             <IfModule mod_rewrite.c>
                 RewriteEngine on
                 RewriteBase /
                 RewriteCond %{REQUEST_FILENAME} !-f
                 RewriteCond %{REQUEST_FILENAME} !-d
                 RewriteRule ^(.*)$ main.py/$1 [L]
             </IfModule>
         </Directory>
     </VirtualHost>
   #+END_EXAMPLE
   我们将Apache的监听端口设为81,是因为我的服务器的前端Web Server为Nginx，监听80。所以通过Nginx将80端口的请求转发到Apache。

*** Nginx配置
    #+BEGIN_EXAMPLE
      server {
          server_name yagra.everet.org;

          client_max_body_size 2M;

          location / {
              proxy_pass http://127.0.0.1:81;
          }
      }
    #+END_EXAMPLE

    对于Nginx的配置仅需要转发就好了。

** 数据库创建
   我在scheme.sql里面编写好了创建数据库，创建表以及新建用户授予权限的sql了。

   所以需要一个有权限的用户来运行scheme.sql来为yagra创建数据库。

   #+BEGIN_SRC sh
     mysql -u root -p < scheme.sql
   #+END_SRC

** 上传图片文件夹权限设置
   请在当前站点根目录创建一个文件夹**uploads**，并且授予CGI脚本运行用户对uploads文件夹有可读可写的权限。
